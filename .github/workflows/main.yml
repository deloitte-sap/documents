name: Process Changed Files

on:
  push:
    branches:
      - main

jobs:
  process_files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Ensure main branch is fetched from origin
        run: git fetch origin main

      - name: Detect file changes
        id: file_changes
        uses: dorny/paths-filter@v3
        with:
          # Enable listing of files matching each filter.
          # Paths to files will be available in `${FILTER_NAME}_files` output variable.
          # Paths will be formatted as JSON array
          list-files: json
      
          # In this example all changed files are passed to the following action to do
          # some custom processing.
          filters: |
            inserted:
              - added: '**'
            updated:
              - modified: '**'
            removed:
              - deleted: '**'
      - name: Debug - Display detected changes
        run: |
          echo "Detected changes:"
          echo "${{ steps.file_changes.outputs.inserted_files }}"
          echo "${{ steps.file_changes.outputs.updated_files }}"
          echo "${{ steps.file_changes.outputs.removed_files }}"

      - name: Process changed files
        run: |
          echo "Processing changed files..."

          process_files() {
            local files=$1
            local operation=$2
            echo "$files" | sed 's/[][]//g; s/"//g' | tr ',' '\n' | while read -r FILE_PATH; do
              FILE_PATH="${FILE_PATH#./}" # Remove leading './'
              URL="https://github.com/${{ github.repository }}/blob/main/$FILE_PATH"
              echo "File: $FILE_PATH"
              echo "Operation: $operation"
              echo "URL: $URL"
              RESPONSE=$(curl -X POST -H "Content-Type: application/json" -d '{"url":"'"$URL"'","operation":"'"$operation"'", "index": "Langchaintest"}' https://rag-api.cfapps.eu10-004.hana.ondemand.com/embedding_web_page/)
              echo "API Response: $RESPONSE"
            done
          }

          inserted_files="${{ steps.file_changes.outputs.inserted_files }}"
          updated_files="${{ steps.file_changes.outputs.updated_files }}"
          removed_files="${{ steps.file_changes.outputs.removed_files }}"

          echo "Inserted files JSON: $inserted_files"
          echo "Updated files JSON: $updated_files"
          echo "Removed files JSON: $removed_files"

          if [ -n "$inserted_files" ] && [ "$inserted_files" != "[]" ]; then
            process_files "$inserted_files" "added"
          fi

          if [ -n "$updated_files" ] && [ "$updated_files" != "[]" ]; then
            process_files "$updated_files" "modified"
          fi

          if [ -n "$removed_files" ] && [ "$removed_files" != "[]" ]; then
            process_files "$removed_files" "deleted"
          fi

      - name: Debug - Processing completed
        run: echo "File processing completed."

      - name: Post results
        run: echo "Files processed successfully."
