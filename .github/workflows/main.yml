name: Process Changed Files

on:
  push:
    paths-ignore:
      - '**/main.yml'
    branches:
      - main

jobs:
  process_files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Ensure main branch is fetched from origin
        run: git fetch origin main

      - name: Detect file changes
        id: file_changes
        uses: dorny/paths-filter@v3
        with:
          # Enable listing of files matching each filter.
          # Paths to files will be available in `${FILTER_NAME}_files` output variable.
          # Paths will be formatted as JSON array
          list-files: json
      
          # In this example all changed files are passed to the following action to do
          # some custom processing.
          filters: |
            inserted:
              - added: '**'
            updated:
              - modified: '**'
            removed:
              - deleted: '**'
      - name: Debug - Display detected changes
        run: |
          echo "Detected changes:"
          echo "Inserted files: ${{ steps.file_changes.outputs.inserted_files }}"
          echo "Updated files: ${{ steps.file_changes.outputs.updated_files }}"
          echo "Removed files: ${{ steps.file_changes.outputs.removed_files }}"

      - name: Process changed files
        env:
          INSERTED_FILES: ${{ steps.file_changes.outputs.inserted_files }}
          UPDATED_FILES: ${{ steps.file_changes.outputs.updated_files }}
          REMOVED_FILES: ${{ steps.file_changes.outputs.removed_files }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "Processing changed files..."

          process_files() {
            local files="$1"
            local operation="$2"
            echo "$files" | jq -r '.[]' | while IFS= read -r FILE_PATH; do
              FILE_PATH="${FILE_PATH#./}"  # Remove leading './'
              if [[ "$FILE_PATH" != */main.yml && "$FILE_PATH" != "" ]]; then  # Skip any path ending with main.yml and empty paths
                INDEX_NAME=$(echo "$FILE_PATH" | awk -F'/' '{print $1}')
                URL="https://raw.githubusercontent.com/$GITHUB_REPOSITORY/main/$FILE_PATH"
                echo "File: \"$FILE_PATH\""
                echo "Operation: $operation"
                echo "URL: $URL"
                RESPONSE=$(curl -X POST -H "Content-Type: application/json" -d '{"url":"'"$URL"'","operation":"'"$operation"'", "index_name": "'"$INDEX_NAME"'"}' https://rag-api.cfapps.eu10-004.hana.ondemand.com/create_doc_embedding/)
                echo "API Response: $RESPONSE"
              else
                echo "Skipping file: \"$FILE_PATH\""
              fi
            done
          }

          echo "Inserted files JSON: \"$INSERTED_FILES\""
          echo "Updated files JSON: \"$UPDATED_FILES\""
          echo "Removed files JSON: \"$REMOVED_FILES\""

          if [ "$INSERTED_FILES" != "[]" ]; then
            process_files "$INSERTED_FILES" "added"
          fi

          if [ "$UPDATED_FILES" != "[]" ]; then
            process_files "$UPDATED_FILES" "modified"
          fi

          if [ "$REMOVED_FILES" != "[]" ]; then
            process_files "$REMOVED_FILES" "deleted"
          fi

      - name: Debug - Processing completed
        run: echo "File processing completed."

      - name: Post results
        run: echo "Files processed successfully."
